//*
// CloudEvent Protobuf Format
//
// - Required context attributes are explicitly represented.
// - Optional and Extension context attributes are carried in a map structure.
// - Data may be represented as binary, text, or protobuf messages.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: io/cloudevents/v1/cloudevents.proto

package cloudeventsV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CloudEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required Attributes
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Source      string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"` // URI-reference
	SpecVersion string `protobuf:"bytes,3,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Optional & Extension Attributes
	Attributes map[string]*CloudEvent_CloudEventAttributeValue `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// -- CloudEvent Data (Bytes, Text, or Proto)
	//
	// Types that are valid to be assigned to Data:
	//
	//	*CloudEvent_BinaryData
	//	*CloudEvent_TextData
	//	*CloudEvent_ProtoData
	Data          isCloudEvent_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudEvent) Reset() {
	*x = CloudEvent{}
	mi := &file_io_cloudevents_v1_cloudevents_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEvent) ProtoMessage() {}

func (x *CloudEvent) ProtoReflect() protoreflect.Message {
	mi := &file_io_cloudevents_v1_cloudevents_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEvent.ProtoReflect.Descriptor instead.
func (*CloudEvent) Descriptor() ([]byte, []int) {
	return file_io_cloudevents_v1_cloudevents_proto_rawDescGZIP(), []int{0}
}

func (x *CloudEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudEvent) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CloudEvent) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *CloudEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CloudEvent) GetAttributes() map[string]*CloudEvent_CloudEventAttributeValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CloudEvent) GetData() isCloudEvent_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CloudEvent) GetBinaryData() []byte {
	if x != nil {
		if x, ok := x.Data.(*CloudEvent_BinaryData); ok {
			return x.BinaryData
		}
	}
	return nil
}

func (x *CloudEvent) GetTextData() string {
	if x != nil {
		if x, ok := x.Data.(*CloudEvent_TextData); ok {
			return x.TextData
		}
	}
	return ""
}

func (x *CloudEvent) GetProtoData() *anypb.Any {
	if x != nil {
		if x, ok := x.Data.(*CloudEvent_ProtoData); ok {
			return x.ProtoData
		}
	}
	return nil
}

type isCloudEvent_Data interface {
	isCloudEvent_Data()
}

type CloudEvent_BinaryData struct {
	BinaryData []byte `protobuf:"bytes,6,opt,name=binary_data,json=binaryData,proto3,oneof"`
}

type CloudEvent_TextData struct {
	TextData string `protobuf:"bytes,7,opt,name=text_data,json=textData,proto3,oneof"`
}

type CloudEvent_ProtoData struct {
	ProtoData *anypb.Any `protobuf:"bytes,8,opt,name=proto_data,json=protoData,proto3,oneof"`
}

func (*CloudEvent_BinaryData) isCloudEvent_Data() {}

func (*CloudEvent_TextData) isCloudEvent_Data() {}

func (*CloudEvent_ProtoData) isCloudEvent_Data() {}

type CloudEventBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*CloudEvent          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudEventBatch) Reset() {
	*x = CloudEventBatch{}
	mi := &file_io_cloudevents_v1_cloudevents_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudEventBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEventBatch) ProtoMessage() {}

func (x *CloudEventBatch) ProtoReflect() protoreflect.Message {
	mi := &file_io_cloudevents_v1_cloudevents_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEventBatch.ProtoReflect.Descriptor instead.
func (*CloudEventBatch) Descriptor() ([]byte, []int) {
	return file_io_cloudevents_v1_cloudevents_proto_rawDescGZIP(), []int{1}
}

func (x *CloudEventBatch) GetEvents() []*CloudEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type CloudEvent_CloudEventAttributeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Attr:
	//
	//	*CloudEvent_CloudEventAttributeValue_CeBoolean
	//	*CloudEvent_CloudEventAttributeValue_CeInteger
	//	*CloudEvent_CloudEventAttributeValue_CeString
	//	*CloudEvent_CloudEventAttributeValue_CeBytes
	//	*CloudEvent_CloudEventAttributeValue_CeUri
	//	*CloudEvent_CloudEventAttributeValue_CeUriRef
	//	*CloudEvent_CloudEventAttributeValue_CeTimestamp
	Attr          isCloudEvent_CloudEventAttributeValue_Attr `protobuf_oneof:"attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudEvent_CloudEventAttributeValue) Reset() {
	*x = CloudEvent_CloudEventAttributeValue{}
	mi := &file_io_cloudevents_v1_cloudevents_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudEvent_CloudEventAttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEvent_CloudEventAttributeValue) ProtoMessage() {}

func (x *CloudEvent_CloudEventAttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_io_cloudevents_v1_cloudevents_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEvent_CloudEventAttributeValue.ProtoReflect.Descriptor instead.
func (*CloudEvent_CloudEventAttributeValue) Descriptor() ([]byte, []int) {
	return file_io_cloudevents_v1_cloudevents_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CloudEvent_CloudEventAttributeValue) GetAttr() isCloudEvent_CloudEventAttributeValue_Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *CloudEvent_CloudEventAttributeValue) GetCeBoolean() bool {
	if x != nil {
		if x, ok := x.Attr.(*CloudEvent_CloudEventAttributeValue_CeBoolean); ok {
			return x.CeBoolean
		}
	}
	return false
}

func (x *CloudEvent_CloudEventAttributeValue) GetCeInteger() int32 {
	if x != nil {
		if x, ok := x.Attr.(*CloudEvent_CloudEventAttributeValue_CeInteger); ok {
			return x.CeInteger
		}
	}
	return 0
}

func (x *CloudEvent_CloudEventAttributeValue) GetCeString() string {
	if x != nil {
		if x, ok := x.Attr.(*CloudEvent_CloudEventAttributeValue_CeString); ok {
			return x.CeString
		}
	}
	return ""
}

func (x *CloudEvent_CloudEventAttributeValue) GetCeBytes() []byte {
	if x != nil {
		if x, ok := x.Attr.(*CloudEvent_CloudEventAttributeValue_CeBytes); ok {
			return x.CeBytes
		}
	}
	return nil
}

func (x *CloudEvent_CloudEventAttributeValue) GetCeUri() string {
	if x != nil {
		if x, ok := x.Attr.(*CloudEvent_CloudEventAttributeValue_CeUri); ok {
			return x.CeUri
		}
	}
	return ""
}

func (x *CloudEvent_CloudEventAttributeValue) GetCeUriRef() string {
	if x != nil {
		if x, ok := x.Attr.(*CloudEvent_CloudEventAttributeValue_CeUriRef); ok {
			return x.CeUriRef
		}
	}
	return ""
}

func (x *CloudEvent_CloudEventAttributeValue) GetCeTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Attr.(*CloudEvent_CloudEventAttributeValue_CeTimestamp); ok {
			return x.CeTimestamp
		}
	}
	return nil
}

type isCloudEvent_CloudEventAttributeValue_Attr interface {
	isCloudEvent_CloudEventAttributeValue_Attr()
}

type CloudEvent_CloudEventAttributeValue_CeBoolean struct {
	CeBoolean bool `protobuf:"varint,1,opt,name=ce_boolean,json=ceBoolean,proto3,oneof"`
}

type CloudEvent_CloudEventAttributeValue_CeInteger struct {
	CeInteger int32 `protobuf:"varint,2,opt,name=ce_integer,json=ceInteger,proto3,oneof"`
}

type CloudEvent_CloudEventAttributeValue_CeString struct {
	CeString string `protobuf:"bytes,3,opt,name=ce_string,json=ceString,proto3,oneof"`
}

type CloudEvent_CloudEventAttributeValue_CeBytes struct {
	CeBytes []byte `protobuf:"bytes,4,opt,name=ce_bytes,json=ceBytes,proto3,oneof"`
}

type CloudEvent_CloudEventAttributeValue_CeUri struct {
	CeUri string `protobuf:"bytes,5,opt,name=ce_uri,json=ceUri,proto3,oneof"`
}

type CloudEvent_CloudEventAttributeValue_CeUriRef struct {
	CeUriRef string `protobuf:"bytes,6,opt,name=ce_uri_ref,json=ceUriRef,proto3,oneof"`
}

type CloudEvent_CloudEventAttributeValue_CeTimestamp struct {
	CeTimestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=ce_timestamp,json=ceTimestamp,proto3,oneof"`
}

func (*CloudEvent_CloudEventAttributeValue_CeBoolean) isCloudEvent_CloudEventAttributeValue_Attr() {}

func (*CloudEvent_CloudEventAttributeValue_CeInteger) isCloudEvent_CloudEventAttributeValue_Attr() {}

func (*CloudEvent_CloudEventAttributeValue_CeString) isCloudEvent_CloudEventAttributeValue_Attr() {}

func (*CloudEvent_CloudEventAttributeValue_CeBytes) isCloudEvent_CloudEventAttributeValue_Attr() {}

func (*CloudEvent_CloudEventAttributeValue_CeUri) isCloudEvent_CloudEventAttributeValue_Attr() {}

func (*CloudEvent_CloudEventAttributeValue_CeUriRef) isCloudEvent_CloudEventAttributeValue_Attr() {}

func (*CloudEvent_CloudEventAttributeValue_CeTimestamp) isCloudEvent_CloudEventAttributeValue_Attr() {
}

var File_io_cloudevents_v1_cloudevents_proto protoreflect.FileDescriptor

const file_io_cloudevents_v1_cloudevents_proto_rawDesc = "" +
	"\n" +
	"#io/cloudevents/v1/cloudevents.proto\x12\x11io.cloudevents.v1\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xcf\x05\n" +
	"\n" +
	"CloudEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12!\n" +
	"\fspec_version\x18\x03 \x01(\tR\vspecVersion\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12M\n" +
	"\n" +
	"attributes\x18\x05 \x03(\v2-.io.cloudevents.v1.CloudEvent.AttributesEntryR\n" +
	"attributes\x12!\n" +
	"\vbinary_data\x18\x06 \x01(\fH\x00R\n" +
	"binaryData\x12\x1d\n" +
	"\ttext_data\x18\a \x01(\tH\x00R\btextData\x125\n" +
	"\n" +
	"proto_data\x18\b \x01(\v2\x14.google.protobuf.AnyH\x00R\tprotoData\x1au\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12L\n" +
	"\x05value\x18\x02 \x01(\v26.io.cloudevents.v1.CloudEvent.CloudEventAttributeValueR\x05value:\x028\x01\x1a\x9a\x02\n" +
	"\x18CloudEventAttributeValue\x12\x1f\n" +
	"\n" +
	"ce_boolean\x18\x01 \x01(\bH\x00R\tceBoolean\x12\x1f\n" +
	"\n" +
	"ce_integer\x18\x02 \x01(\x05H\x00R\tceInteger\x12\x1d\n" +
	"\tce_string\x18\x03 \x01(\tH\x00R\bceString\x12\x1b\n" +
	"\bce_bytes\x18\x04 \x01(\fH\x00R\aceBytes\x12\x17\n" +
	"\x06ce_uri\x18\x05 \x01(\tH\x00R\x05ceUri\x12\x1e\n" +
	"\n" +
	"ce_uri_ref\x18\x06 \x01(\tH\x00R\bceUriRef\x12?\n" +
	"\fce_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x00R\vceTimestampB\x06\n" +
	"\x04attrB\x06\n" +
	"\x04data\"H\n" +
	"\x0fCloudEventBatch\x125\n" +
	"\x06events\x18\x01 \x03(\v2\x1d.io.cloudevents.v1.CloudEventR\x06eventsB\xc6\x01\n" +
	"\x17io.cloudevents.v1.protoP\x01ZUgithub.com/soundphilosopher/basic-grpc-service-go/sdk/io/cloudevents/v1;cloudeventsV1\xaa\x02\x1aCloudNative.CloudEvents.V1\xca\x02\x17Io\\CloudEvents\\V1\\Proto\xea\x02\x1aIo::CloudEvents::V1::Protob\x06proto3"

var (
	file_io_cloudevents_v1_cloudevents_proto_rawDescOnce sync.Once
	file_io_cloudevents_v1_cloudevents_proto_rawDescData []byte
)

func file_io_cloudevents_v1_cloudevents_proto_rawDescGZIP() []byte {
	file_io_cloudevents_v1_cloudevents_proto_rawDescOnce.Do(func() {
		file_io_cloudevents_v1_cloudevents_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_io_cloudevents_v1_cloudevents_proto_rawDesc), len(file_io_cloudevents_v1_cloudevents_proto_rawDesc)))
	})
	return file_io_cloudevents_v1_cloudevents_proto_rawDescData
}

var file_io_cloudevents_v1_cloudevents_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_io_cloudevents_v1_cloudevents_proto_goTypes = []any{
	(*CloudEvent)(nil),      // 0: io.cloudevents.v1.CloudEvent
	(*CloudEventBatch)(nil), // 1: io.cloudevents.v1.CloudEventBatch
	nil,                     // 2: io.cloudevents.v1.CloudEvent.AttributesEntry
	(*CloudEvent_CloudEventAttributeValue)(nil), // 3: io.cloudevents.v1.CloudEvent.CloudEventAttributeValue
	(*anypb.Any)(nil),             // 4: google.protobuf.Any
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_io_cloudevents_v1_cloudevents_proto_depIdxs = []int32{
	2, // 0: io.cloudevents.v1.CloudEvent.attributes:type_name -> io.cloudevents.v1.CloudEvent.AttributesEntry
	4, // 1: io.cloudevents.v1.CloudEvent.proto_data:type_name -> google.protobuf.Any
	0, // 2: io.cloudevents.v1.CloudEventBatch.events:type_name -> io.cloudevents.v1.CloudEvent
	3, // 3: io.cloudevents.v1.CloudEvent.AttributesEntry.value:type_name -> io.cloudevents.v1.CloudEvent.CloudEventAttributeValue
	5, // 4: io.cloudevents.v1.CloudEvent.CloudEventAttributeValue.ce_timestamp:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_io_cloudevents_v1_cloudevents_proto_init() }
func file_io_cloudevents_v1_cloudevents_proto_init() {
	if File_io_cloudevents_v1_cloudevents_proto != nil {
		return
	}
	file_io_cloudevents_v1_cloudevents_proto_msgTypes[0].OneofWrappers = []any{
		(*CloudEvent_BinaryData)(nil),
		(*CloudEvent_TextData)(nil),
		(*CloudEvent_ProtoData)(nil),
	}
	file_io_cloudevents_v1_cloudevents_proto_msgTypes[3].OneofWrappers = []any{
		(*CloudEvent_CloudEventAttributeValue_CeBoolean)(nil),
		(*CloudEvent_CloudEventAttributeValue_CeInteger)(nil),
		(*CloudEvent_CloudEventAttributeValue_CeString)(nil),
		(*CloudEvent_CloudEventAttributeValue_CeBytes)(nil),
		(*CloudEvent_CloudEventAttributeValue_CeUri)(nil),
		(*CloudEvent_CloudEventAttributeValue_CeUriRef)(nil),
		(*CloudEvent_CloudEventAttributeValue_CeTimestamp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_io_cloudevents_v1_cloudevents_proto_rawDesc), len(file_io_cloudevents_v1_cloudevents_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_cloudevents_v1_cloudevents_proto_goTypes,
		DependencyIndexes: file_io_cloudevents_v1_cloudevents_proto_depIdxs,
		MessageInfos:      file_io_cloudevents_v1_cloudevents_proto_msgTypes,
	}.Build()
	File_io_cloudevents_v1_cloudevents_proto = out.File
	file_io_cloudevents_v1_cloudevents_proto_goTypes = nil
	file_io_cloudevents_v1_cloudevents_proto_depIdxs = nil
}
